name: PR Checks
on:
  pull_request:
    types: ["opened", "edited", "reopened", "synchronize"]
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
    outputs:
      version_tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET }}
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ib-ci
          role-duration-seconds: 1200
          role-session-name: githubPRChecks
          role-skip-session-tagging: true

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Go Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Dependencies
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          GIT_USER: ${{ secrets.GIT_USER }}
          GIT_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        run: make ci step=setup

      - name: Lint
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: make ci step=lint

      - name: Build CI runner
        run: make docker-build
